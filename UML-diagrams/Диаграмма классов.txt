@startuml SimplifiedRobotArchitecture

package "Client (C++)" {
    class CommandProcessor {
        +run(): void
        +stop(): void
    }

    class MotionController {
        +moveForward(): void
        +moveBackward(): void
        +turnLeft(): void
        +turnRight(): void
        +halt(): void
    }

    class NetworkHandler {
        +publishMessage(): void
        +getCommand(): string
        +isConnected(): bool
    }

    class PinManager {
        +setPinState(): void
        +halt(): void
    }

    class Main {
        +main(): int
    }
}

package "Server (Python)" {
    class MainServer {
        +start(): void
        +stop(): void
    }
}

' Наследование
MotionController --|> PinManager

' Композиция
CommandProcessor *-- MotionController
CommandProcessor *-- NetworkHandler
Main *-- CommandProcessor
Main *-- MotionController
Main *-- NetworkHandler

' Зависимости
NetworkHandler ..> CommandProcessor : MQTT messages
MainServer ..> NetworkHandler : via MQTT

note top of PinManager
    Управление GPIO пинами
    (6,12,13,20,21,26)
end note

note bottom of MotionController
    Контроль двигателей через
    4 пина направления
end note

note right of NetworkHandler
    MQTT клиент для связи
    Подписка: robot/gpio
    Публикация: robot/status
end note

note left of CommandProcessor
    Обработчик команд
    Цикл опроса: 100мс
end note

@enduml